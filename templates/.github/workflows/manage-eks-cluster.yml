name: Manage ECS Cluster

on:
  workflow_dispatch:
    inputs:
      clusterName:
        description: 'Name of the ECS cluster'
        required: true
      serviceName:
        description: 'Name of the ECS service'
        required: true
      containerImage:
        description: 'Container image URI for the ECS task'
        required: true
      desiredCount:
        description: 'Number of desired tasks for the ECS service'
        required: true
      awsRegion:
        description: 'AWS Region for the cluster'
        required: true
      action:
        description: 'Action to perform (deploy/destroy)'
        required: true

jobs:
  deploy_service:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'deploy' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.awsRegion }}
      - name: Register ECS Task Definition
        run: |
          aws ecs register-task-definition \
            --family ${GITHUB_EVENT_INPUTS_SERVICE_NAME} \
            --container-definitions '[{
              "name": "${{ github.event.inputs.serviceName }}",
              "image": "${{ github.event.inputs.containerImage }}",
              "memory": 512,
              "cpu": 256,
              "essential": true
            }]'
      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster "${{ github.event.inputs.clusterName }}" \
            --service "${{ github.event.inputs.serviceName }}" \
            --desired-count "${{ github.event.inputs.desiredCount }}"

  destroy_service:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'destroy' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.awsRegion }}
      - name: Delete ECS Service
        run: |
          aws ecs delete-service \
            --cluster "${{ github.event.inputs.clusterName }}" \
            --service "${{ github.event.inputs.serviceName }}" \
            --force
